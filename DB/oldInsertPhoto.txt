/* public String insertPhoto(String file_path, String owner, String session, String latitudine, String longitudine){
        String reponse_data = "";
        HttpURLConnection connection = null;
        DataOutputStream dos = null;
        DataInputStream inStream = null;

        String existingFileName = file_path;
        String lineEnd = "\r\n";
        String twoHyphens = "--";
        String boundary =  "*****" + Long.toString(System.currentTimeMillis()) + "*****";
        int bytesRead, bytesAvailable, bufferSize;
        byte[] buffer;
        int maxBufferSize = 1*1024*1024;
        try{
            //------------------ CLIENT REQUEST
            File filetoupload = new File(existingFileName);
            FileInputStream fileInputStream = new FileInputStream(filetoupload.getPath());
            URL url = getUrl(INSERT_PHOTO);
            connection  = (HttpURLConnection) url.openConnection();
            connection.setDoInput(true);
            connection.setDoOutput(true);
            connection.setUseCaches(false);
            connection.setRequestMethod("POST");
            connection.setRequestProperty("Connection", "Keep-Alive");
            connection.setRequestProperty("User-Agent", "Android Multipart HTTP Client 1.0");
            connection.setRequestProperty("Content-Type", "multipart/form-data; boundary=" + boundary);
            dos = new DataOutputStream( connection.getOutputStream() );


            dos.writeBytes(twoHyphens + boundary + lineEnd);
            dos.writeBytes("Content-Disposition: form-data; name=\"owner\""+ lineEnd);
            dos.writeBytes(lineEnd);
            dos.writeBytes(owner);
            dos.writeBytes(twoHyphens + boundary + lineEnd);
            dos.writeBytes("Content-Disposition: form-data; name=\"challenge\""+ lineEnd);
            dos.writeBytes(lineEnd);
            dos.writeBytes(session);

            if (latitudine != "0.0"){
                dos.writeBytes(twoHyphens + boundary + lineEnd);
                dos.writeBytes("Content-Disposition: form-data; name=\"latitudine\""+ lineEnd);
                dos.writeBytes(lineEnd);
                dos.writeBytes(latitudine);
                dos.writeBytes(twoHyphens + boundary + lineEnd);
                dos.writeBytes("Content-Disposition: form-data; name=\"longitudine\""+ lineEnd);
                dos.writeBytes(lineEnd);
                dos.writeBytes(longitudine);
            }
            dos.writeBytes(twoHyphens + boundary + lineEnd);
            dos.writeBytes("Content-Disposition: form-data; name=\"image\";filename=\""+filetoupload.getName()+"\"" + lineEnd);
            dos.writeBytes("Content-Type: image/jpeg" + lineEnd);
            dos.writeBytes("Content-Transfer-Encoding: binary" + lineEnd);
            dos.writeBytes(lineEnd);





            bytesAvailable = fileInputStream.available();
            bufferSize = Math.min(bytesAvailable, maxBufferSize);
            buffer = new byte[bufferSize];
            bytesRead = fileInputStream.read(buffer, 0, bufferSize);
            while (bytesRead > 0){
                dos.write(buffer, 0, bufferSize);
                bytesAvailable = fileInputStream.available();
                bufferSize = Math.min(bytesAvailable, maxBufferSize);
                bytesRead = fileInputStream.read(buffer, 0, bufferSize);
            }
            dos.writeBytes(lineEnd);
            dos.writeBytes(twoHyphens + boundary + twoHyphens + lineEnd);
            fileInputStream.close();
            dos.flush();
            dos.close();
        }
        catch (MalformedURLException e){
            e.printStackTrace();
        }
        catch (IOException e){
            e.printStackTrace();
        }
        //------------------ read the SERVER RESPONSE
        try {
            inputStream = connection.getInputStream();
            bufferedReader = new BufferedReader(new InputStreamReader(inputStream,"iso-8859-1"));
            String line;
            while((line = bufferedReader.readLine()) != null){
                reponse_data += line;
            }
            bufferedReader.close();
            inputStream.close();
        }
        catch (IOException e){
            e.printStackTrace();
        }

        connection.disconnect();
        return reponse_data;
    }*/